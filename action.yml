name: "Python Code Style Action (uv-based, dependencies pre-installed)"
description: "Runs flake8, mypy, pylint via 'uv run' on the project if Python files changed, using pre-installed versions."

inputs:
  fail_on_error:
    description: "Should the action fail if errors are found? [default: true]"
    required: false
    default: "true"
  working_directory:
    description: "Directory where the code to lint resides and linters should be run."
    required: false
    default: "."
runs:
  using: "composite"
  steps:
    - name: Check reporter type
      id: reporter-check
      shell: bash
      run: |
        if [ ${{ github.event_name }} = "pull_request" ]; then
            echo "reporter=github-pr-review" >> $GITHUB_OUTPUT
        else
            echo "reporter=github-check" >> $GITHUB_OUTPUT
        fi

    - name: Detect changed files
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          addedOrModifiedPython:
            - added|modified: '**/*.py'
        list-files: shell

    - name: Run flake8 via uv run
      if: steps.changes.outputs.pythonChanged == 'true'
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "Running flake8 via uv run in $(pwd)"
        uv run flake8 . || [[ "${{ inputs.fail_on_error }}" == "false" ]]

    - name: Run mypy via uv run
      if: steps.changes.outputs.pythonChanged == 'true'
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "Running mypy via uv run in $(pwd)"
        uv run mypy . || [[ "${{ inputs.fail_on_error }}" == "false" ]]

    - name: Run pylint via uv run
      if: steps.changes.outputs.pythonChanged == 'true'
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "Running pylint via uv run in $(pwd)"
        uv run pylint . || [[ "${{ inputs.fail_on_error }}" == "false" ]]